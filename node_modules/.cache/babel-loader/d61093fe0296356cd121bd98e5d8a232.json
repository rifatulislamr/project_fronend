{"ast":null,"code":"var _jsxFileName = \"D:\\\\B.IIUC\\\\Varsity Project for github\\\\project01_Clone\\\\src\\\\components\\\\GoogleMap\\\\GoogleMap.js\",\n    _s = $RefreshSig$();\n\nimport { Box, Button, ButtonGroup, Flex, HStack, IconButton, Input, SkeletonText, Text } from '@chakra-ui/react';\nimport { FaLocationArrow, FaTimes } from 'react-icons/fa';\nimport { Autocomplete, DirectionsRenderer, GoogleMap, Marker, useJsApiLoader } from '@react-google-maps/api';\nimport { useRef, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst center = {\n  lat: 22.376059052186704,\n  lng: 91.84870884862495\n};\n\nfunction App() {\n  _s();\n\n  const {\n    isLoaded\n  } = useJsApiLoader({\n    googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY,\n    libraries: ['places']\n  });\n  const [map, setMap] = useState(null);\n  const [directionsResponse, setDirectionsResponse] = useState(null);\n  const [distance, setDistance] = useState('');\n  const [duration, setDuration] = useState('');\n  /** @type React.MutableRefObject<HTMLInputElement> */\n\n  const originRef = useRef();\n  /** @type React.MutableRefObject<HTMLInputElement> */\n\n  const destiantionRef = useRef();\n\n  if (!isLoaded) {\n    return /*#__PURE__*/_jsxDEV(SkeletonText, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 16\n    }, this);\n  }\n\n  async function calculateRoute() {\n    if (originRef.current.value === '' || destiantionRef.current.value === '') {\n      return;\n    } // eslint-disable-next-line no-undef\n\n\n    const directionsService = new google.maps.DirectionsService();\n    const results = await directionsService.route({\n      origin: originRef.current.value,\n      destination: destiantionRef.current.value,\n      // eslint-disable-next-line no-undef\n      travelMode: google.maps.TravelMode.DRIVING\n    });\n    setDirectionsResponse(results);\n    setDistance(results.routes[0].legs[0].distance.text);\n    setDuration(results.routes[0].legs[0].duration.text);\n  }\n\n  function clearRoute() {\n    setDirectionsResponse(null);\n    setDistance('');\n    setDuration('');\n    originRef.current.value = '';\n    destiantionRef.current.value = '';\n  }\n\n  return /*#__PURE__*/_jsxDEV(Flex, {\n    position: \"relative\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    h: \"100vh\",\n    w: \"100vw\",\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      position: \"absolute\",\n      left: 0,\n      top: 0,\n      h: \"100%\",\n      w: \"100%\",\n      children: /*#__PURE__*/_jsxDEV(GoogleMap, {\n        center: center,\n        zoom: 13,\n        mapContainerStyle: {\n          width: '100%',\n          height: '100%'\n        },\n        options: {\n          zoomControl: false,\n          streetViewControl: false,\n          mapTypeControl: false,\n          fullscreenControl: false\n        },\n        onLoad: map => setMap(map),\n        children: [/*#__PURE__*/_jsxDEV(Marker, {\n          position: center\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this), directionsResponse && /*#__PURE__*/_jsxDEV(DirectionsRenderer, {\n          directions: directionsResponse\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      p: 4,\n      borderRadius: \"lg\",\n      m: 4,\n      bgColor: \"white\",\n      shadow: \"base\",\n      minW: \"container.md\",\n      zIndex: \"1\",\n      children: [/*#__PURE__*/_jsxDEV(HStack, {\n        spacing: 4,\n        justifyContent: \"space-between\",\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          flexGrow: 1,\n          children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              type: \"text\",\n              placeholder: \"Origin\",\n              ref: originRef\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          flexGrow: 1,\n          children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              type: \"text\",\n              placeholder: \"Destination\",\n              ref: destiantionRef\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ButtonGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            colorScheme: \"pink\",\n            type: \"submit\",\n            onClick: calculateRoute,\n            children: \"Calculate Route\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n            \"aria-label\": \"center back\",\n            icon: /*#__PURE__*/_jsxDEV(FaTimes, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 35\n            }, this),\n            onClick: clearRoute\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(HStack, {\n        spacing: 4,\n        mt: 4,\n        justifyContent: \"space-between\",\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          children: [\"Distance: \", distance, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          children: [\"Duration: \", duration, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          \"aria-label\": \"center back\",\n          icon: /*#__PURE__*/_jsxDEV(FaLocationArrow, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 31\n          }, this),\n          isRound: true,\n          onClick: () => {\n            map.panTo(center);\n            map.setZoom(15);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"gFZuOfnNUW54ixS725S+9T+s7os=\", false, function () {\n  return [useJsApiLoader];\n});\n\n_c = App;\nexport default GoogleMap;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/B.IIUC/Varsity Project for github/project01_Clone/src/components/GoogleMap/GoogleMap.js"],"names":["Box","Button","ButtonGroup","Flex","HStack","IconButton","Input","SkeletonText","Text","FaLocationArrow","FaTimes","Autocomplete","DirectionsRenderer","GoogleMap","Marker","useJsApiLoader","useRef","useState","center","lat","lng","App","isLoaded","googleMapsApiKey","process","env","REACT_APP_GOOGLE_MAPS_API_KEY","libraries","map","setMap","directionsResponse","setDirectionsResponse","distance","setDistance","duration","setDuration","originRef","destiantionRef","calculateRoute","current","value","directionsService","google","maps","DirectionsService","results","route","origin","destination","travelMode","TravelMode","DRIVING","routes","legs","text","clearRoute","width","height","zoomControl","streetViewControl","mapTypeControl","fullscreenControl","panTo","setZoom"],"mappings":"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","sourcesContent":["import {Box, Button, ButtonGroup, Flex, HStack, IconButton, Input, SkeletonText, Text,} from '@chakra-ui/react'\r\nimport {FaLocationArrow, FaTimes} from 'react-icons/fa'\r\n\r\nimport {Autocomplete, DirectionsRenderer, GoogleMap, Marker, useJsApiLoader,} from '@react-google-maps/api'\r\nimport {useRef, useState} from 'react'\r\n\r\nconst center = {lat: 22.376059052186704, lng: 91.84870884862495}\r\n\r\nfunction App() {\r\n    const {isLoaded} = useJsApiLoader({\r\n        googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY,\r\n        libraries: ['places'],\r\n    })\r\n\r\n    const [map, setMap] = useState(/** @type google.maps.Map */ (null))\r\n    const [directionsResponse, setDirectionsResponse] = useState(null)\r\n    const [distance, setDistance] = useState('')\r\n    const [duration, setDuration] = useState('')\r\n\r\n    /** @type React.MutableRefObject<HTMLInputElement> */\r\n    const originRef = useRef()\r\n    /** @type React.MutableRefObject<HTMLInputElement> */\r\n    const destiantionRef = useRef()\r\n\r\n    if (!isLoaded) {\r\n        return <SkeletonText/>\r\n    }\r\n\r\n    async function calculateRoute() {\r\n        if (originRef.current.value === '' || destiantionRef.current.value === '') {\r\n            return\r\n        }\r\n        // eslint-disable-next-line no-undef\r\n        const directionsService = new google.maps.DirectionsService()\r\n        const results = await directionsService.route({\r\n            origin: originRef.current.value,\r\n            destination: destiantionRef.current.value,\r\n            // eslint-disable-next-line no-undef\r\n            travelMode: google.maps.TravelMode.DRIVING,\r\n        })\r\n        setDirectionsResponse(results)\r\n        setDistance(results.routes[0].legs[0].distance.text)\r\n        setDuration(results.routes[0].legs[0].duration.text)\r\n    }\r\n\r\n    function clearRoute() {\r\n        setDirectionsResponse(null)\r\n        setDistance('')\r\n        setDuration('')\r\n        originRef.current.value = ''\r\n        destiantionRef.current.value = ''\r\n    }\r\n\r\n    return (\r\n        <Flex\r\n            position='relative'\r\n            flexDirection='column'\r\n            alignItems='center'\r\n            h='100vh'\r\n            w='100vw'\r\n        >\r\n            <Box position='absolute' left={0} top={0} h='100%' w='100%'>\r\n                {/* Google Map Box */}\r\n                <GoogleMap\r\n                    center={center}\r\n                    zoom={13}\r\n                    mapContainerStyle={{width: '100%', height: '100%'}}\r\n                    options={{\r\n                        zoomControl: false,\r\n                        streetViewControl: false,\r\n                        mapTypeControl: false,\r\n                        fullscreenControl: false,\r\n                    }}\r\n                    onLoad={map => setMap(map)}\r\n                >\r\n                    <Marker position={center}/>\r\n                    {directionsResponse && (\r\n                        <DirectionsRenderer directions={directionsResponse}/>\r\n                    )}\r\n                </GoogleMap>\r\n            </Box>\r\n            <Box\r\n                p={4}\r\n                borderRadius='lg'\r\n                m={4}\r\n                bgColor='white'\r\n                shadow='base'\r\n                minW='container.md'\r\n                zIndex='1'\r\n            >\r\n                <HStack spacing={4} justifyContent='space-between'>\r\n                    <Box flexGrow={1}>\r\n                        <Autocomplete>\r\n                            <Input type='text' placeholder='Origin' ref={originRef}/>\r\n                        </Autocomplete>\r\n                    </Box>\r\n                    <Box flexGrow={1}>\r\n                        <Autocomplete>\r\n                            <Input\r\n                                type='text'\r\n                                placeholder='Destination'\r\n                                ref={destiantionRef}\r\n                            />\r\n                        </Autocomplete>\r\n                    </Box>\r\n\r\n                    <ButtonGroup>\r\n                        <Button colorScheme='pink' type='submit' onClick={calculateRoute}>\r\n                            Calculate Route\r\n                        </Button>\r\n                        <IconButton\r\n                            aria-label='center back'\r\n                            icon={<FaTimes/>}\r\n                            onClick={clearRoute}\r\n                        />\r\n                    </ButtonGroup>\r\n                </HStack>\r\n                <HStack spacing={4} mt={4} justifyContent='space-between'>\r\n                    <Text>Distance: {distance} </Text>\r\n                    <Text>Duration: {duration} </Text>\r\n                    <IconButton\r\n                        aria-label='center back'\r\n                        icon={<FaLocationArrow/>}\r\n                        isRound\r\n                        onClick={() => {\r\n                            map.panTo(center)\r\n                            map.setZoom(15)\r\n                        }}\r\n                    />\r\n                </HStack>\r\n            </Box>\r\n        </Flex>\r\n    )\r\n}\r\n\r\nexport default GoogleMap;"]},"metadata":{},"sourceType":"module"}