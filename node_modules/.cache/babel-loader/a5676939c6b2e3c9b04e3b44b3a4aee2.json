{"ast":null,"code":"import _slicedToArray from\"D:/B.IIUC/Varsity Project for github/Real Estate Front End/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import axios from\"axios\";import{useState,useEffect}from'react';import{createUserWithEmailAndPassword,getAuth,onAuthStateChanged,signInWithEmailAndPassword,signOut,updateProfile}from\"firebase/auth\";import initializeAuthenticaiton from\"../Firebase/firebase.init\";// initialize firebase\ninitializeAuthenticaiton();var useFirebase=function useFirebase(){var adminEmail=\"admin@gmail.com\";var auth=getAuth();var _useState=useState({}),_useState2=_slicedToArray(_useState,2),user=_useState2[0],setUser=_useState2[1];var _useState3=useState(true),_useState4=_slicedToArray(_useState3,2),isLoading=_useState4[0],setIsLoading=_useState4[1];// for checking if the user is admin or not\nvar _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),admin=_useState6[0],setAdmin=_useState6[1];//   register user\nvar registerUser=function registerUser(email,password){setIsLoading(true);// i am just returning the promise here to do some extrea things on sign up page\nreturn createUserWithEmailAndPassword(auth,email,password);};//  login with email and password\nvar loginWithEmail=function loginWithEmail(email,password){setIsLoading(true);return signInWithEmailAndPassword(auth,email,password);};//   logout user\nvar logOut=function logOut(){setIsLoading(true);signOut(auth).then(function(){alert(\"Logout successfull\");}).finally(function(){return setIsLoading(false);});};// update user name while user sign up\nvar updateName=function updateName(name){updateProfile(auth.currentUser,{displayName:name}).then(function(){});};// setting an observer to hanlde user state\nuseEffect(function(){setIsLoading(true);var unsubscribe=onAuthStateChanged(auth,function(user){if(user){setUser(user);}else{setUser({});}setIsLoading(false);});// this clean up function is for better performance a little bit\nreturn function(){return unsubscribe;};},[]);// cheking if the user is admin or not\nuseEffect(function(){if((user===null||user===void 0?void 0:user.email)===\"admin@gmail.com\"){setAdmin(true);}else{setAdmin(false);}},[user.email]);return{user:user,setUser:setUser,registerUser:registerUser,updateName:updateName,admin:admin,isLoading:isLoading,setIsLoading:setIsLoading,loginWithEmail:loginWithEmail,logOut:logOut};};export default useFirebase;","map":{"version":3,"sources":["D:/B.IIUC/Varsity Project for github/Real Estate Front End/src/hooks/useFirebase.js"],"names":["axios","useState","useEffect","createUserWithEmailAndPassword","getAuth","onAuthStateChanged","signInWithEmailAndPassword","signOut","updateProfile","initializeAuthenticaiton","useFirebase","adminEmail","auth","user","setUser","isLoading","setIsLoading","admin","setAdmin","registerUser","email","password","loginWithEmail","logOut","then","alert","finally","updateName","name","currentUser","displayName","unsubscribe"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nimport {useState,useEffect} from 'react'\r\nimport {\r\n  createUserWithEmailAndPassword,\r\n  getAuth,\r\n  onAuthStateChanged,\r\n  signInWithEmailAndPassword,\r\n  signOut,\r\n  updateProfile\r\n} from \"firebase/auth\";\r\n\r\n\r\nimport initializeAuthenticaiton from \"../Firebase/firebase.init\";\r\n\r\n// initialize firebase\r\ninitializeAuthenticaiton();\r\n\r\n\r\nconst useFirebase = () => {\r\n  const adminEmail= \"admin@gmail.com\";\r\n  const auth = getAuth();\r\n  const [user, setUser] = useState({});\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  // for checking if the user is admin or not\r\n  const [admin, setAdmin] = useState(false);\r\n\r\n  //   register user\r\n  const registerUser = (email, password) => {\r\n    setIsLoading(true);\r\n    // i am just returning the promise here to do some extrea things on sign up page\r\n    return createUserWithEmailAndPassword(auth, email, password);\r\n  };\r\n  //  login with email and password\r\n  const loginWithEmail = (email, password) => {\r\n    setIsLoading(true);\r\n    return signInWithEmailAndPassword(auth, email, password);\r\n  };\r\n\r\n  //   logout user\r\n  const logOut = () => {\r\n    setIsLoading(true);\r\n    signOut(auth)\r\n      .then(() => {\r\n       alert(\"Logout successfull\")\r\n      })\r\n      .finally(() => setIsLoading(false));\r\n  };\r\n\r\n  // update user name while user sign up\r\n  const updateName = (name) => {\r\n    updateProfile(auth.currentUser, {\r\n      displayName: name,\r\n    }).then(() => {});\r\n  };\r\n\r\n\r\n  // setting an observer to hanlde user state\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    const unsubscribe = onAuthStateChanged(auth, (user) => {\r\n      if (user) {\r\n        setUser(user);\r\n       \r\n      } else {\r\n        setUser({});\r\n      }\r\n      setIsLoading(false);\r\n    });\r\n    // this clean up function is for better performance a little bit\r\n    return () => unsubscribe;\r\n  }, []);\r\n\r\n  // cheking if the user is admin or not\r\n  useEffect(() => {\r\n    \r\n  if(user?.email===\"admin@gmail.com\"){\r\n    setAdmin(true)\r\n  }else{\r\n    setAdmin(false)\r\n  }\r\n  }, [user.email]);\r\n\r\n\r\n  return {\r\n    user,\r\n    setUser,\r\n    registerUser,\r\n    updateName,\r\n    admin,\r\n    isLoading,\r\n    setIsLoading,\r\n    loginWithEmail,\r\n    logOut,\r\n    \r\n\r\n  \r\n  \r\n  };\r\n};\r\nexport default useFirebase;\r\n\r\n"]},"metadata":{},"sourceType":"module"}