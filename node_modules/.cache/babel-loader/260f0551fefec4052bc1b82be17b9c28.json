{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { createUserWithEmailAndPassword, getAuth, GoogleAuthProvider, onAuthStateChanged, signInWithEmailAndPassword, signInWithPopup, signOut } from \"firebase/auth\";\nimport { useEffect, useState } from \"react\";\nimport initializeAuthentication from \"../Firebase/firebase.init\"; //initializing firebase\n\ninitializeAuthentication();\n\nconst useFirebase = () => {\n  _s();\n\n  // autentication states\n  const [user, setUser] = useState({});\n  const [isLoading, setIsLoading] = useState(true);\n  const auth = getAuth();\n  const googleProvider = new GoogleAuthProvider(); // sign up with email\n\n  const signUpUsingEmailAndPass = (email, password, name) => {\n    return createUserWithEmailAndPassword(auth, email, password);\n  }; //    sign in with email and password\n\n\n  const signInWithEmail = (email, password) => {\n    return signInWithEmailAndPassword(auth, email, password);\n  }; // setting up an observer\n\n\n  useEffect(() => {\n    setIsLoading(true);\n    onAuthStateChanged(auth, user => {\n      if (user) {\n        setUser(user);\n      } else {\n        setUser({});\n      }\n\n      setIsLoading(false);\n    });\n  }, []); // logout authentication\n\n  const logOut = () => {\n    setIsLoading(true);\n    signOut(auth).then(() => {\n      // Sign-out successful.\n      setUser({});\n    }).catch(error => {}).finally(() => {\n      setIsLoading(false);\n    });\n  };\n\n  return {\n    user,\n    setUser,\n    signinWithGoogle,\n    signUpUsingEmailAndPass,\n    signInWithEmail,\n    logOut,\n    isLoading,\n    setIsLoading\n  };\n};\n\n_s(useFirebase, \"6hUK0E8YndCJdFKOGNBKQ9uTnV0=\");\n\nexport default useFirebase;","map":{"version":3,"sources":["D:/B.IIUC/Varsity Project for github/Real Estate Front End/src/hooks/useFirebase.js"],"names":["createUserWithEmailAndPassword","getAuth","GoogleAuthProvider","onAuthStateChanged","signInWithEmailAndPassword","signInWithPopup","signOut","useEffect","useState","initializeAuthentication","useFirebase","user","setUser","isLoading","setIsLoading","auth","googleProvider","signUpUsingEmailAndPass","email","password","name","signInWithEmail","logOut","then","catch","error","finally","signinWithGoogle"],"mappings":";;AAAA,SACEA,8BADF,EAEEC,OAFF,EAGEC,kBAHF,EAIEC,kBAJF,EAKEC,0BALF,EAMEC,eANF,EAOEC,OAPF,QAQO,eARP;AASA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAEA,OAAOC,wBAAP,MAAqC,2BAArC,C,CAGA;;AACAA,wBAAwB;;AACxB,MAAMC,WAAW,GAAG,MAAM;AAAA;;AACxB;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACK,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAMO,IAAI,GAAGd,OAAO,EAApB;AACA,QAAMe,cAAc,GAAG,IAAId,kBAAJ,EAAvB,CALwB,CAOxB;;AACA,QAAMe,uBAAuB,GAAG,CAACC,KAAD,EAAQC,QAAR,EAAkBC,IAAlB,KAA2B;AACzD,WAAOpB,8BAA8B,CAACe,IAAD,EAAOG,KAAP,EAAcC,QAAd,CAArC;AACD,GAFD,CARwB,CAWxB;;;AACA,QAAME,eAAe,GAAG,CAACH,KAAD,EAAQC,QAAR,KAAqB;AAC3C,WAAOf,0BAA0B,CAACW,IAAD,EAAOG,KAAP,EAAcC,QAAd,CAAjC;AACD,GAFD,CAZwB,CAgBxB;;;AACAZ,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAX,IAAAA,kBAAkB,CAACY,IAAD,EAAQJ,IAAD,IAAU;AACjC,UAAIA,IAAJ,EAAU;AACRC,QAAAA,OAAO,CAACD,IAAD,CAAP;AACD,OAFD,MAEO;AACLC,QAAAA,OAAO,CAAC,EAAD,CAAP;AACD;;AACDE,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,KAPiB,CAAlB;AAQD,GAVQ,EAUN,EAVM,CAAT,CAjBwB,CA8BxB;;AACA,QAAMQ,MAAM,GAAG,MAAM;AACnBR,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAR,IAAAA,OAAO,CAACS,IAAD,CAAP,CACGQ,IADH,CACQ,MAAM;AAEV;AACAX,MAAAA,OAAO,CAAC,EAAD,CAAP;AACD,KALH,EAMGY,KANH,CAMUC,KAAD,IAAW,CAAE,CANtB,EAOGC,OAPH,CAOW,MAAM;AACbZ,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,KATH;AAUD,GAZD;;AAaA,SAAO;AACLH,IAAAA,IADK;AAELC,IAAAA,OAFK;AAGLe,IAAAA,gBAHK;AAILV,IAAAA,uBAJK;AAKLI,IAAAA,eALK;AAMLC,IAAAA,MANK;AAOLT,IAAAA,SAPK;AAQLC,IAAAA;AARK,GAAP;AAUD,CAtDD;;GAAMJ,W;;AAuDN,eAAeA,WAAf","sourcesContent":["import {\r\n  createUserWithEmailAndPassword,\r\n  getAuth,\r\n  GoogleAuthProvider,\r\n  onAuthStateChanged,\r\n  signInWithEmailAndPassword,\r\n  signInWithPopup,\r\n  signOut,\r\n} from \"firebase/auth\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nimport initializeAuthentication from \"../Firebase/firebase.init\";\r\n\r\n\r\n//initializing firebase\r\ninitializeAuthentication();\r\nconst useFirebase = () => {\r\n  // autentication states\r\n  const [user, setUser] = useState({});\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const auth = getAuth();\r\n  const googleProvider = new GoogleAuthProvider();\r\n\r\n  // sign up with email\r\n  const signUpUsingEmailAndPass = (email, password, name) => {\r\n    return createUserWithEmailAndPassword(auth, email, password);\r\n  };\r\n  //    sign in with email and password\r\n  const signInWithEmail = (email, password) => {\r\n    return signInWithEmailAndPassword(auth, email, password);\r\n  };\r\n\r\n  // setting up an observer\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    onAuthStateChanged(auth, (user) => {\r\n      if (user) {\r\n        setUser(user);\r\n      } else {\r\n        setUser({});\r\n      }\r\n      setIsLoading(false);\r\n    });\r\n  }, []);\r\n\r\n\r\n  // logout authentication\r\n  const logOut = () => {\r\n    setIsLoading(true);\r\n    signOut(auth)\r\n      .then(() => {\r\n       \r\n        // Sign-out successful.\r\n        setUser({});\r\n      })\r\n      .catch((error) => {})\r\n      .finally(() => {\r\n        setIsLoading(false);\r\n      });\r\n  };\r\n  return {\r\n    user,\r\n    setUser,\r\n    signinWithGoogle,\r\n    signUpUsingEmailAndPass,\r\n    signInWithEmail,\r\n    logOut,\r\n    isLoading,\r\n    setIsLoading,\r\n  };\r\n};\r\nexport default useFirebase;\r\n"]},"metadata":{},"sourceType":"module"}