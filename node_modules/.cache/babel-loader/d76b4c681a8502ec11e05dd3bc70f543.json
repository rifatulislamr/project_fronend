{"ast":null,"code":"var _jsxFileName = \"D:\\\\B.IIUC\\\\Varsity Project for github\\\\Real Estate Front End\\\\src\\\\components\\\\Login\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState } from 'react';\nimport '../../asset/css/test.css';\nimport { Button, Col, Container, Row } from \"react-bootstrap\";\nimport { useForm } from \"react-hook-form\";\nimport { Link, useHistory, useLocation } from \"react-router-dom\";\nimport useAuth from '../../hooks/useAuth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = () => {\n  _s();\n\n  var _location$state;\n\n  const [values, setValues] = useState({\n    email: \"\",\n    password: \"\"\n  });\n  const [error, setError] = useState(\"\");\n  const {\n    isLoading,\n    setIsLoading,\n    signInWithEmail,\n    signinWithGoogle,\n    setAdmin\n  } = useAuth();\n  const location = useLocation();\n  const history = useHistory(); // redirect user\n\n  const redirect_ui = ((_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.from) || \"/\"; // show notification\n\n  const notify = () => {\n    toast.success(\"Login Successfull!\", {\n      // we can also change the notify by inline styles here\n      position: \"top-right\",\n      autoClose: 4000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined\n    });\n  }; // signin with email\n\n\n  const handleSignInWithEmail = e => {\n    e.preventDefault();\n\n    if (values.email === \"\" || values.password === \"\") {\n      setError(\"Input filelds cannot be empty\");\n      return;\n    }\n\n    signInWithEmail(values.email, values.password).then(result => {\n      setAdmin(false);\n\n      if (values.email === \"admin@gmail.com\") {\n        setAdmin(true);\n      }\n\n      notify();\n      setError(\"\");\n      history.push(redirect_ui); // console.log(result.user);\n    }).catch(error => {\n      setError(\"Invalid Email or Password\");\n    });\n  }; // sign in with google\n\n\n  const handleGoogleSignIn = () => {\n    setIsLoading(true);\n    signinWithGoogle().then(result => {\n      notify();\n      history.push(redirect_ui);\n    }).catch(error => {}).finally(() => {\n      setIsLoading(false);\n    });\n  }; // const [error, setError] = useState(false);\n  // const [loginError, setLoginError] = useState(false);\n  // const { loginWithEmail, setIsLoading} = useAuth();\n  // const history = useHistory();\n  // const location = useLocation();\n  // const redirect_url = location.state?.from || \"/dashboard\";\n  // const {\n  //   register,\n  //   handleSubmit,\n  //   reset,\n  //   formState: { errors },\n  // } = useForm();\n  // const onSubmit = (data) => {\n  //     console.log(data)\n  //   setLoginError(false);\n  //   setError(false);\n  //   if (data.email === \"\" || data.password === \"\") {\n  //     setError(true);\n  //     return;\n  //   }\n  //   loginWithEmail(data.email, data.password)\n  //   .then((result) => {\n  //     alert( \"Login Successfull\")\n  //     setIsLoading(false);\n  //     history.push(redirect_url);\n  //   })\n  //   .catch((err) => {\n  //     setLoginError(true);\n  //   })\n  //   .finally(setIsLoading(false));\n  //   reset();\n  // };\n\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      fluid: true,\n      className: \"topFixedPage p-5 \",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Container, {\n          className: \"loginBox \",\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              style: {\n                borderRadius: '1rem',\n                maxWidth: '400px'\n              },\n              noValidate: true,\n              autoComplete: \"off\",\n              onSubmit: handleSubmit(onSubmit),\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"logIn\",\n                children: \"SIGN IN\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 31\n              }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n                className: \"loginSubHead\",\n                children: \"Please enter your login and password!\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 31\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"loginText\",\n                  children: \"Email\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 127,\n                  columnNumber: 35\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...register(\"email\"),\n                  type: \"email\",\n                  className: \"form-control\",\n                  style: {\n                    borderRadius: \"20px\"\n                  },\n                  placeholder: \"Enter email\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 128,\n                  columnNumber: 35\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 31\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 1\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"loginText\",\n                  children: \"Password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 133,\n                  columnNumber: 35\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...register(\"password\"),\n                  type: \"password\",\n                  style: {\n                    borderRadius: \"20px\"\n                  },\n                  className: \"form-control\",\n                  placeholder: \"Enter password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 134,\n                  columnNumber: 35\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 31\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"success\",\n                type: \"submit\",\n                className: \"my-3\",\n                children: \"Sign in\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 31\n              }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n                style: {\n                  color: \"red\",\n                  letterSpacing: \"1px\",\n                  marginTop: \"5px\"\n                },\n                children: \"input fields cannot be empty\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 11\n              }, this), loginError && /*#__PURE__*/_jsxDEV(\"p\", {\n                style: {\n                  color: \"red\",\n                  letterSpacing: \"1px\",\n                  marginTop: \"3px\"\n                },\n                children: \"Invalid Email or Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                style: {\n                  letterSpacing: \"1px\",\n                  margin: \"3px 0\",\n                  marginTop: \"5rem \",\n                  color: \"#fff\",\n                  textAlign: \"center\"\n                },\n                children: [\"Not have an account?\", /*#__PURE__*/_jsxDEV(Link, {\n                  to: \"/registration\",\n                  style: {\n                    color: \"red\",\n                    textDecoration: \"none\"\n                  },\n                  children: \"Register!\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 151,\n                  columnNumber: 11\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 30\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 27\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 7\n  }, this);\n};\n\n_s(Login, \"LEuAsn12PVLJesJ5mBmfJ0nfMP8=\", false, function () {\n  return [useAuth, useLocation, useHistory];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["D:/B.IIUC/Varsity Project for github/Real Estate Front End/src/components/Login/Login.js"],"names":["React","Fragment","useState","Button","Col","Container","Row","useForm","Link","useHistory","useLocation","useAuth","Login","values","setValues","email","password","error","setError","isLoading","setIsLoading","signInWithEmail","signinWithGoogle","setAdmin","location","history","redirect_ui","state","from","notify","toast","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","handleSignInWithEmail","e","preventDefault","then","result","push","catch","handleGoogleSignIn","finally","borderRadius","maxWidth","handleSubmit","onSubmit","register","color","letterSpacing","marginTop","loginError","margin","textAlign","textDecoration"],"mappings":"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","sourcesContent":["import React, {Fragment, useState} from 'react';\r\nimport '../../asset/css/test.css';\r\nimport {Button, Col, Container, Row} from \"react-bootstrap\";\r\n\r\nimport { useForm } from \"react-hook-form\";\r\nimport { Link, useHistory, useLocation } from \"react-router-dom\";\r\nimport useAuth from '../../hooks/useAuth';\r\n\r\n\r\n\r\nconst Login = () => {\r\n  \r\nconst [values, setValues] = useState({ email: \"\", password: \"\" });\r\nconst [error, setError] = useState(\"\");\r\nconst {\r\nisLoading,\r\nsetIsLoading,\r\nsignInWithEmail,\r\nsigninWithGoogle,\r\nsetAdmin,\r\n} = useAuth();\r\nconst location = useLocation();\r\nconst history = useHistory();\r\n// redirect user\r\nconst redirect_ui = location.state?.from || \"/\";\r\n// show notification\r\nconst notify = () => {\r\ntoast.success(\"Login Successfull!\", {\r\n// we can also change the notify by inline styles here\r\nposition: \"top-right\",\r\nautoClose: 4000,\r\nhideProgressBar: false,\r\ncloseOnClick: true,\r\npauseOnHover: true,\r\ndraggable: true,\r\nprogress: undefined,\r\n});\r\n};\r\n// signin with email\r\nconst handleSignInWithEmail = (e) => {\r\ne.preventDefault();\r\nif (values.email === \"\" || values.password === \"\") {\r\nsetError(\"Input filelds cannot be empty\");\r\nreturn;\r\n}\r\nsignInWithEmail(values.email, values.password)\r\n.then((result) => {\r\nsetAdmin(false);\r\nif (values.email === \"admin@gmail.com\") {\r\nsetAdmin(true);\r\n}\r\nnotify();\r\nsetError(\"\");\r\nhistory.push(redirect_ui);\r\n// console.log(result.user);\r\n})\r\n.catch((error) => {\r\nsetError(\"Invalid Email or Password\");\r\n});\r\n};\r\n// sign in with google\r\nconst handleGoogleSignIn = () => {\r\nsetIsLoading(true);\r\nsigninWithGoogle()\r\n.then((result) => {\r\nnotify();\r\nhistory.push(redirect_ui);\r\n})\r\n.catch((error) => {})\r\n.finally(() => {\r\nsetIsLoading(false);\r\n});\r\n};\r\n    // const [error, setError] = useState(false);\r\n    // const [loginError, setLoginError] = useState(false);\r\n    // const { loginWithEmail, setIsLoading} = useAuth();\r\n    // const history = useHistory();\r\n    // const location = useLocation();\r\n    // const redirect_url = location.state?.from || \"/dashboard\";\r\n  \r\n    // const {\r\n    //   register,\r\n    //   handleSubmit,\r\n    //   reset,\r\n    //   formState: { errors },\r\n    // } = useForm();\r\n  \r\n    // const onSubmit = (data) => {\r\n    //     console.log(data)\r\n    //   setLoginError(false);\r\n    //   setError(false);\r\n  \r\n    //   if (data.email === \"\" || data.password === \"\") {\r\n    //     setError(true);\r\n    //     return;\r\n    //   }\r\n    //   loginWithEmail(data.email, data.password)\r\n    //   .then((result) => {\r\n    //     alert( \"Login Successfull\")\r\n    //     setIsLoading(false);\r\n    //     history.push(redirect_url);\r\n    //   })\r\n    //   .catch((err) => {\r\n    //     setLoginError(true);\r\n    //   })\r\n    //   .finally(setIsLoading(false));\r\n      \r\n  \r\n    //   reset();\r\n    // };\r\n    return (\r\n      <Fragment>\r\n      <Container fluid={true} className=\"topFixedPage p-5 \">\r\n          <div>\r\n              <Container className=\"loginBox \">\r\n                  <Row>\r\n\r\n                      \r\n                          <form style={{borderRadius: '1rem', maxWidth: '400px'}} noValidate\r\n        autoComplete=\"off\"\r\n        onSubmit={handleSubmit(onSubmit)}>\r\n\r\n                              <h3 className=\"logIn\">SIGN IN</h3>\r\n                              <h5 className=\"loginSubHead\">Please enter your login and password!</h5>\r\n\r\n                              <div className=\"form-group\">\r\n                                  <label className=\"loginText\">Email</label>\r\n                                  <input  {...register(\"email\")} type=\"email\" className=\"form-control\" style={{borderRadius:\"20px\"}} placeholder=\"Enter email\"\r\n                                        />\r\n                              </div>\r\n<br/>\r\n                              <div className=\"form-group\">\r\n                                  <label className=\"loginText\">Password</label>\r\n                                  <input {...register(\"password\")} type=\"password\" style={{borderRadius:\"20px\"}} className=\"form-control\"\r\n                                         placeholder=\"Enter password\" />\r\n                              </div>\r\n\r\n                              <Button variant=\"success\" type=\"submit\" className='my-3'>Sign in</Button>\r\n                              {error && (\r\n          <p style={{ color: \"red\", letterSpacing: \"1px\",marginTop:\"5px\" }}>\r\n            input fields cannot be empty\r\n          </p>\r\n        )}\r\n         {loginError && (\r\n          <p style={{ color: \"red\", letterSpacing: \"1px\",marginTop:\"3px\" }}>\r\n            Invalid Email or Password\r\n          </p>\r\n        )}\r\n                             <p style={{ letterSpacing: \"1px\", margin: \"3px 0\",marginTop:\"5rem \",color:\"#fff\" ,textAlign:\"center\"}}>\r\n          Not have an account?\r\n          <Link\r\n            to=\"/registration\"\r\n            style={{ color: \"red\", textDecoration: \"none\", }}\r\n          >\r\n            Register!\r\n          </Link>\r\n        </p>\r\n                          </form>\r\n                     \r\n\r\n\r\n                  </Row>\r\n              </Container>\r\n          </div>\r\n\r\n\r\n      </Container>\r\n\r\n\r\n  </Fragment>\r\n    )\r\n\r\n}\r\nexport default Login;\r\n"]},"metadata":{},"sourceType":"module"}