{"ast":null,"code":"import _slicedToArray from\"G:/Final Project Agro Farmer/Digital-Krishi-Kamar-frontend-main/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import axios from\"axios\";import{useState,useEffect}from'react';import{createUserWithEmailAndPassword,getAuth,getIdToken,onAuthStateChanged,signInWithEmailAndPassword,signOut,updateProfile}from\"firebase/auth\";import initializeAuthenticaiton from\"../Firebase/firebase.init\";// initialize firebase\ninitializeAuthenticaiton();var useFirebase=function useFirebase(){var auth=getAuth();var _useState=useState({}),_useState2=_slicedToArray(_useState,2),user=_useState2[0],setUser=_useState2[1];var _useState3=useState(true),_useState4=_slicedToArray(_useState3,2),isLoading=_useState4[0],setIsLoading=_useState4[1];// for checking if the user is admin or not\nvar _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),admin=_useState6[0],setAdmin=_useState6[1];//   register user\nvar registerUser=function registerUser(email,password){setIsLoading(true);// i am just returning the promise here to do some extrea things on sign up page\nreturn createUserWithEmailAndPassword(auth,email,password);};//  login with email and password\nvar loginWithEmail=function loginWithEmail(email,password){setIsLoading(true);return signInWithEmailAndPassword(auth,email,password);};//   logout user\nvar logOut=function logOut(){setIsLoading(true);signOut(auth).then(function(){alert(\"Logout successfull\");}).finally(function(){return setIsLoading(false);});};// update user name while user sign up\nvar updateName=function updateName(name){updateProfile(auth.currentUser,{displayName:name}).then(function(){});};// save user details for after register\n// const saveUser = (email, displayName) => {\n//   const user = { email, displayName };\n//   axios\n//     .post(\"https://calm-reaches-87696.herokuapp.com/users\", user)\n//     .then((res) => console.log(res.data));\n// };\n// setting an observer to hanlde user state\nuseEffect(function(){setIsLoading(true);var unsubscribe=onAuthStateChanged(auth,function(user){if(user){setUser(user);}else{setUser({});}setIsLoading(false);});// this clean up function is for better performance a little bit\nreturn function(){return unsubscribe;};},[]);// cheking if the user is admin or not\n// useEffect(() => {\n//   axios\n//     .get(`https://calm-reaches-87696.herokuapp.com/users/${user.email}`)\n//     .then((res) => setAdmin(res.data.admin));\n// }, [user.email]);\nreturn{user:user,setUser:setUser,registerUser:registerUser,updateName:updateName,admin:admin,isLoading:isLoading,setIsLoading:setIsLoading,loginWithEmail:loginWithEmail,logOut:logOut};};export default useFirebase;","map":{"version":3,"sources":["G:/Final Project Agro Farmer/Digital-Krishi-Kamar-frontend-main/src/ManageUsertate/ManageUserState.js"],"names":["axios","useState","useEffect","createUserWithEmailAndPassword","getAuth","getIdToken","onAuthStateChanged","signInWithEmailAndPassword","signOut","updateProfile","initializeAuthenticaiton","useFirebase","auth","user","setUser","isLoading","setIsLoading","admin","setAdmin","registerUser","email","password","loginWithEmail","logOut","then","alert","finally","updateName","name","currentUser","displayName","unsubscribe"],"mappings":"sLAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAAQC,QAAR,CAAiBC,SAAjB,KAAiC,OAAjC,CACA,OACEC,8BADF,CAEEC,OAFF,CAGEC,UAHF,CAIEC,kBAJF,CAKEC,0BALF,CAMEC,OANF,CAOEC,aAPF,KAQO,eARP,CAWA,MAAOC,CAAAA,wBAAP,KAAqC,2BAArC,CAEA;AACAA,wBAAwB,GAGxB,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAM,CACxB,GAAMC,CAAAA,IAAI,CAAGR,OAAO,EAApB,CACA,cAAwBH,QAAQ,CAAC,EAAD,CAAhC,wCAAOY,IAAP,eAAaC,OAAb,eACA,eAAkCb,QAAQ,CAAC,IAAD,CAA1C,yCAAOc,SAAP,eAAkBC,YAAlB,eAEA;AACA,eAA0Bf,QAAQ,CAAC,KAAD,CAAlC,yCAAOgB,KAAP,eAAcC,QAAd,eAEA;AACA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,KAAD,CAAQC,QAAR,CAAqB,CACxCL,YAAY,CAAC,IAAD,CAAZ,CACA;AACA,MAAOb,CAAAA,8BAA8B,CAACS,IAAD,CAAOQ,KAAP,CAAcC,QAAd,CAArC,CACD,CAJD,CAKA;AACA,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACF,KAAD,CAAQC,QAAR,CAAqB,CAC1CL,YAAY,CAAC,IAAD,CAAZ,CACA,MAAOT,CAAAA,0BAA0B,CAACK,IAAD,CAAOQ,KAAP,CAAcC,QAAd,CAAjC,CACD,CAHD,CAKA;AACA,GAAME,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,EAAM,CACnBP,YAAY,CAAC,IAAD,CAAZ,CACAR,OAAO,CAACI,IAAD,CAAP,CACGY,IADH,CACQ,UAAM,CACXC,KAAK,CAAC,oBAAD,CAAL,CACA,CAHH,EAIGC,OAJH,CAIW,iBAAMV,CAAAA,YAAY,CAAC,KAAD,CAAlB,EAJX,EAKD,CAPD,CASA;AACA,GAAMW,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,IAAD,CAAU,CAC3BnB,aAAa,CAACG,IAAI,CAACiB,WAAN,CAAmB,CAC9BC,WAAW,CAAEF,IADiB,CAAnB,CAAb,CAEGJ,IAFH,CAEQ,UAAM,CAAE,CAFhB,EAGD,CAJD,CAMA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACAtB,SAAS,CAAC,UAAM,CACdc,YAAY,CAAC,IAAD,CAAZ,CACA,GAAMe,CAAAA,WAAW,CAAGzB,kBAAkB,CAACM,IAAD,CAAO,SAACC,IAAD,CAAU,CACrD,GAAIA,IAAJ,CAAU,CACRC,OAAO,CAACD,IAAD,CAAP,CAED,CAHD,IAGO,CACLC,OAAO,CAAC,EAAD,CAAP,CACD,CACDE,YAAY,CAAC,KAAD,CAAZ,CACD,CARqC,CAAtC,CASA;AACA,MAAO,kBAAMe,CAAAA,WAAN,EAAP,CACD,CAbQ,CAaN,EAbM,CAAT,CAeA;AACA;AACA;AACA;AACA;AACA;AAIA,MAAO,CACLlB,IAAI,CAAJA,IADK,CAELC,OAAO,CAAPA,OAFK,CAGLK,YAAY,CAAZA,YAHK,CAILQ,UAAU,CAAVA,UAJK,CAKLV,KAAK,CAALA,KALK,CAMLF,SAAS,CAATA,SANK,CAOLC,YAAY,CAAZA,YAPK,CAQLM,cAAc,CAAdA,cARK,CASLC,MAAM,CAANA,MATK,CAAP,CAaD,CAnFD,CAoFA,cAAeZ,CAAAA,WAAf","sourcesContent":["import axios from \"axios\";\nimport {useState,useEffect} from 'react'\nimport {\n  createUserWithEmailAndPassword,\n  getAuth,\n  getIdToken,\n  onAuthStateChanged,\n  signInWithEmailAndPassword,\n  signOut,\n  updateProfile\n} from \"firebase/auth\";\n\n\nimport initializeAuthenticaiton from \"../Firebase/firebase.init\";\n\n// initialize firebase\ninitializeAuthenticaiton();\n\n\nconst useFirebase = () => {\n  const auth = getAuth();\n  const [user, setUser] = useState({});\n  const [isLoading, setIsLoading] = useState(true);\n\n  // for checking if the user is admin or not\n  const [admin, setAdmin] = useState(false);\n\n  //   register user\n  const registerUser = (email, password) => {\n    setIsLoading(true);\n    // i am just returning the promise here to do some extrea things on sign up page\n    return createUserWithEmailAndPassword(auth, email, password);\n  };\n  //  login with email and password\n  const loginWithEmail = (email, password) => {\n    setIsLoading(true);\n    return signInWithEmailAndPassword(auth, email, password);\n  };\n\n  //   logout user\n  const logOut = () => {\n    setIsLoading(true);\n    signOut(auth)\n      .then(() => {\n       alert(\"Logout successfull\")\n      })\n      .finally(() => setIsLoading(false));\n  };\n\n  // update user name while user sign up\n  const updateName = (name) => {\n    updateProfile(auth.currentUser, {\n      displayName: name,\n    }).then(() => {});\n  };\n\n  // save user details for after register\n  // const saveUser = (email, displayName) => {\n  //   const user = { email, displayName };\n  //   axios\n  //     .post(\"https://calm-reaches-87696.herokuapp.com/users\", user)\n  //     .then((res) => console.log(res.data));\n  // };\n\n  // setting an observer to hanlde user state\n  useEffect(() => {\n    setIsLoading(true);\n    const unsubscribe = onAuthStateChanged(auth, (user) => {\n      if (user) {\n        setUser(user);\n       \n      } else {\n        setUser({});\n      }\n      setIsLoading(false);\n    });\n    // this clean up function is for better performance a little bit\n    return () => unsubscribe;\n  }, []);\n\n  // cheking if the user is admin or not\n  // useEffect(() => {\n  //   axios\n  //     .get(`https://calm-reaches-87696.herokuapp.com/users/${user.email}`)\n  //     .then((res) => setAdmin(res.data.admin));\n  // }, [user.email]);\n\n \n\n  return {\n    user,\n    setUser,\n    registerUser,\n    updateName,\n    admin,\n    isLoading,\n    setIsLoading,\n    loginWithEmail,\n    logOut,\n  \n  \n  };\n};\nexport default useFirebase;\n\n"]},"metadata":{},"sourceType":"module"}